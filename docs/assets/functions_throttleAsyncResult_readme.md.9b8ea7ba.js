import{d as r,c as n,a,b,e as c,o as m}from"./app.00a19c4d.js";function l(s,{useSamePromise:e=!1}={}){let t=!1,p=null;return function(...k){if(t)return e&&p?p:new Promise(()=>{});{const u=s.call(this,...k).then((...o)=>(t=!1,p=null,Promise.resolve(...o))).catch((...o)=>(t=!1,p=null,Promise.reject(...o)));return p=u,t=!0,u}}}function d(s){return console.log("submiting",s),fetch("https://httpbin.org/delay/1.5",{body:JSON.stringify(s),method:"POST",mode:"cors"})}const g=l(d);var h=r({setup(){return()=>n("fieldset",null,[n("legend",null,[a("\u63D0\u4EA4\u573A\u666F Submission Case")]),n("ul",null,[n("li",null,[a("\u80CC\u666F\uFF1A\u4E3A\u9632\u6B62\u7528\u6237\u91CD\u590D\u63D0\u4EA4\uFF0C\u6211\u4EEC\u901A\u5E38\u9700\u8981\u7EF4\u62A4\u4E00\u4E2A loading \u53D8\u91CF\uFF0C\u5F53 loading \u6570\u91CF\u591A\u8D77\u6765\u5C31\u96BE\u641E\u4E86\uFF08\u6211\u4E5F\u60F3\u5077\u61D2\uFF09\u3002")]),n("li",null,[a("\u9700\u6C42\uFF1A\u4E0D\u9700\u8981\u5199 loading\uFF0C\u4E5F\u53EF\u4EE5\u53BB\u91CD")]),n("li",null,[a("\u539F\u6587\uFF1Ahttps://github.com/bowencool/blog/issues/3")])]),n("button",{onClick:async()=>{await g({msg:"some data to be sent"}),console.log("submit completed")}},[a("submit(click me quickly)")])])}});function i(s){console.log("fetching",s);const e=(.4+Math.random()*2).toFixed(3);return fetch(`https://httpbin.org/delay/${e}?keywords=${s}`,{method:"GET",mode:"cors"}).then(()=>({data:`result for ${s}`}))}const f=l(i),y=l(i,{useSamePromise:!0});var w=r({setup(){return()=>n("fieldset",null,[n("legend",null,[a("\u67E5\u8BE2\u573A\u666F Query Case")]),n("ul",null,[n("li",null,[a("\u80CC\u666F\uFF1A\u591A\u4E2A\u5730\u65B9\u9700\u8981\u540C\u4E00\u4EFD\u6570\u636E\uFF0C\u5F80\u5F80\u8C03\u7528\uFF08\u8BF7\u6C42\uFF09\u591A\u6B21\u3002")]),n("li",null,[a("\u9700\u6C42\uFF1A\u6267\u884C\uFF08\u8BF7\u6C42\uFF09\u4E00\u6B21\uFF0C\u8FD4\u56DE\u540C\u4E00\u4E2A\u7ED3\u679C\u7ED9\u591A\u4E2A\u8C03\u7528\u65B9\u3002")])]),n("button",{onClick:async()=>{const s=await f("abc");console.log("fetched",s)}},[a("Get something same")]),n("button",{onClick:async()=>{const s=await y("abc");console.log("fetched",s)}},[a("Get something same(useSamePromise)")])])}});const _=c('<h2 id="intro" tabindex="-1">Intro <a class="header-anchor" href="#intro" aria-hidden="true">#</a></h2><p>\u4E00\u4E2A\u7C7B\u4F3C <code>throttle</code> \u7684\u9AD8\u9636\u51FD\u6570\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u65B0\u51FD\u6570\uFF0C\u8FD9\u4E2A\u65B0\u51FD\u6570\u8FD4\u56DE\u7B2C\u4E00\u6B21\u6267\u884C\u7684\u5F02\u6B65\u4EFB\u52A1\u7ED3\u679C\u5E76\u5FFD\u7565\u5728\u6B64\u671F\u95F4\u7684\u4EFB\u4F55\u6267\u884C\u3002</p><p>A higher-order function like <code>throttle</code> that returns a new function that returns the result of the first execution of the asynchronous task and ignores any executions in the meantime.</p><p>\u6362\u53E5\u8BDD\u8BF4\uFF0C\u5728\u4EFB\u610F\u65F6\u523B\uFF0C\u4EC5\u4F1A\u5B58\u5728 1 \u4E2A\u6216 0 \u4E2A\u6B63\u5728\u6267\u884C\u7684\u5F02\u6B65\u4EFB\u52A1\u3002</p><p>In other words, at any given moment, there will be only 1 or 0 executing asynchronous tasks.</p><p>\u518D\u6362\u53E5\u8BDD\u8BF4\uFF0C\u5047\u5982\u6709\u4E00\u4E2A pending promise\uFF0C\u5728\u5B83\u7ED3\u675F\u4E4B\u524D\u4E0D\u4F1A\u91CD\u590D\u6267\u884C\u4E0B\u4E00\u4E2A\u5F02\u6B65\u4EFB\u52A1\uFF0C\u76F4\u63A5\u8FD4\u56DE\u5B83\u3002</p><p>In other words, if there is a pending promise, the next asynchronous task will not be repeated until it ends, and it will be returned directly.</p><h2 id="demo" tabindex="-1">Demo <a class="header-anchor" href="#demo" aria-hidden="true">#</a></h2><blockquote><p>\u4EE5\u4E0B Demo \u4EE5\u7F51\u7EDC\u8BF7\u6C42\u4E3A\u4F8B\uFF0C\u6253\u5F00 Devtool \u67E5\u770B\u6548\u679C\u3002</p><p>The following demo takes a network request as an example and opens Devtool to see the effect.</p></blockquote>',9),v=c(`<details><summary>\u67E5\u770B\u4EE3\u7801</summary><div class="language-vue line-numbers-mode"><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><br><br><br><div class="highlighted">\xA0</div><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><div class="highlighted">\xA0</div><div class="highlighted">\xA0</div><div class="highlighted">\xA0</div><div class="highlighted">\xA0</div><div class="highlighted">\xA0</div><div class="highlighted">\xA0</div><br><br><br><br><br><br><br><br><br></div><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tsx<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span> defineComponent <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> throttleAsyncResult <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;..&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">submitApi</span><span class="token punctuation">(</span><span class="token parameter">data<span class="token operator">:</span> object</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;submiting&#39;</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">&#39;https://httpbin.org/delay/1.5&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    body<span class="token operator">:</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">,</span>
    method<span class="token operator">:</span> <span class="token string">&#39;POST&#39;</span><span class="token punctuation">,</span>
    mode<span class="token operator">:</span> <span class="token string">&#39;cors&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> throttledSubmitApi <span class="token operator">=</span> <span class="token function">throttleAsyncResult</span><span class="token punctuation">(</span>submitApi<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>
      <span class="token operator">&lt;</span>fieldset<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>legend<span class="token operator">&gt;</span>\u63D0\u4EA4\u573A\u666F Submission Case<span class="token operator">&lt;</span><span class="token operator">/</span>legend<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>ul<span class="token operator">&gt;</span>
          <span class="token operator">&lt;</span>li<span class="token operator">&gt;</span>
            \u80CC\u666F\uFF1A\u4E3A\u9632\u6B62\u7528\u6237\u91CD\u590D\u63D0\u4EA4\uFF0C\u6211\u4EEC\u901A\u5E38\u9700\u8981\u7EF4\u62A4\u4E00\u4E2A loading \u53D8\u91CF\uFF0C\u5F53
            loading \u6570\u91CF\u591A\u8D77\u6765\u5C31\u96BE\u641E\u4E86\uFF08\u6211\u4E5F\u60F3\u5077\u61D2\uFF09\u3002
          <span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>
          <span class="token operator">&lt;</span>li<span class="token operator">&gt;</span>\u9700\u6C42\uFF1A\u4E0D\u9700\u8981\u5199 loading\uFF0C\u4E5F\u53EF\u4EE5\u53BB\u91CD<span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>
          <span class="token operator">&lt;</span>li<span class="token operator">&gt;</span>\u539F\u6587\uFF1Ahttps<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>github<span class="token punctuation">.</span>com<span class="token operator">/</span>bowencool<span class="token operator">/</span>blog<span class="token operator">/</span>issues<span class="token operator">/</span><span class="token number">3</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>button
          onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">await</span> <span class="token function">throttledSubmitApi</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
              msg<span class="token operator">:</span> <span class="token string">&#39;some data to be sent&#39;</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;submit completed&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span><span class="token punctuation">}</span>
        <span class="token operator">&gt;</span>
          <span class="token function">submit</span><span class="token punctuation">(</span>click me quickly<span class="token punctuation">)</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>fieldset<span class="token operator">&gt;</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br></div></div></details>`,1),A=c(`<details><summary>\u67E5\u770B\u4EE3\u7801</summary><div class="language-vue line-numbers-mode"><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><div class="highlighted">\xA0</div><div class="highlighted">\xA0</div><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br></div><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tsx<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span> defineComponent <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> throttleAsyncResult <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;..&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">getApi</span><span class="token punctuation">(</span><span class="token parameter">keywords<span class="token operator">:</span> string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;fetching&#39;</span><span class="token punctuation">,</span> keywords<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> delay <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">0.4</span> <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">https://httpbin.org/delay/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>delay<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">?keywords=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>keywords<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    method<span class="token operator">:</span> <span class="token string">&#39;GET&#39;</span><span class="token punctuation">,</span>
    mode<span class="token operator">:</span> <span class="token string">&#39;cors&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
    data<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">result for </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>keywords<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> throttledGetApi <span class="token operator">=</span> <span class="token function">throttleAsyncResult</span><span class="token punctuation">(</span>getApi<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> throttledGetApi2 <span class="token operator">=</span> <span class="token function">throttleAsyncResult</span><span class="token punctuation">(</span>getApi<span class="token punctuation">,</span> <span class="token punctuation">{</span> useSamePromise<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>
      <span class="token operator">&lt;</span>fieldset<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>legend<span class="token operator">&gt;</span>\u67E5\u8BE2\u573A\u666F Query Case<span class="token operator">&lt;</span><span class="token operator">/</span>legend<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>ul<span class="token operator">&gt;</span>
          <span class="token operator">&lt;</span>li<span class="token operator">&gt;</span>\u80CC\u666F\uFF1A\u591A\u4E2A\u5730\u65B9\u9700\u8981\u540C\u4E00\u4EFD\u6570\u636E\uFF0C\u5F80\u5F80\u8C03\u7528\uFF08\u8BF7\u6C42\uFF09\u591A\u6B21\u3002<span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>
          <span class="token operator">&lt;</span>li<span class="token operator">&gt;</span>\u9700\u6C42\uFF1A\u6267\u884C\uFF08\u8BF7\u6C42\uFF09\u4E00\u6B21\uFF0C\u8FD4\u56DE\u540C\u4E00\u4E2A\u7ED3\u679C\u7ED9\u591A\u4E2A\u8C03\u7528\u65B9\u3002<span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>button
          onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">const</span> rez <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">throttledGetApi</span><span class="token punctuation">(</span><span class="token string">&#39;abc&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;fetched&#39;</span><span class="token punctuation">,</span> rez<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span><span class="token punctuation">}</span>
        <span class="token operator">&gt;</span>
          Get something same
        <span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>button
          onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">const</span> rez <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">throttledGetApi2</span><span class="token punctuation">(</span><span class="token string">&#39;abc&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;fetched&#39;</span><span class="token punctuation">,</span> rez<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span><span class="token punctuation">}</span>
        <span class="token operator">&gt;</span>
          Get something <span class="token function">same</span><span class="token punctuation">(</span>useSamePromise<span class="token punctuation">)</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>fieldset<span class="token operator">&gt;</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br></div></div></details><h2 id="types" tabindex="-1">Types <a class="header-anchor" href="#types" aria-hidden="true">#</a></h2><div class="language-ts line-numbers-mode"><pre><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token generic-function"><span class="token function">throttleAsyncResult</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">P</span> <span class="token keyword">extends</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token constant">R</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>
  <span class="token function-variable function">fn</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> <span class="token operator">...</span>p<span class="token operator">:</span> <span class="token constant">P</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token constant">R</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    useSamePromise<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    useSamePromise<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> <span class="token operator">...</span>args<span class="token operator">:</span> <span class="token constant">P</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token constant">R</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div>`,3),T='{"title":"Intro","description":"","frontmatter":{},"headers":[{"level":2,"title":"Intro","slug":"intro"},{"level":2,"title":"Demo","slug":"demo"},{"level":2,"title":"Types","slug":"types"}],"relativePath":"../src/throttleAsyncResult/readme.md","lastUpdated":1632448598702}',F={},P=Object.assign(F,{setup(s){return(e,t)=>(m(),b("div",null,[_,n(h),v,n(w),A]))}});export{T as __pageData,P as default};
