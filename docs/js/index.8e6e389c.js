(function(e){function t(t){for(var o,l,u=t[0],s=t[1],i=t[2],b=0,f=[];b<u.length;b++)l=u[b],Object.prototype.hasOwnProperty.call(r,l)&&r[l]&&f.push(r[l][0]),r[l]=0;for(o in s)Object.prototype.hasOwnProperty.call(s,o)&&(e[o]=s[o]);a&&a(t);while(f.length)f.shift()();return c.push.apply(c,i||[]),n()}function n(){for(var e,t=0;t<c.length;t++){for(var n=c[t],o=!0,u=1;u<n.length;u++){var s=n[u];0!==r[s]&&(o=!1)}o&&(c.splice(t--,1),e=l(l.s=n[0]))}return e}var o={},r={index:0},c=[];function l(t){if(o[t])return o[t].exports;var n=o[t]={i:t,l:!1,exports:{}};return e[t].call(n.exports,n,n.exports,l),n.l=!0,n.exports}l.m=e,l.c=o,l.d=function(e,t,n){l.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},l.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},l.t=function(e,t){if(1&t&&(e=l(e)),8&t)return e;if(4&t&&"object"===typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(l.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)l.d(n,o,function(t){return e[t]}.bind(null,o));return n},l.n=function(e){var t=e&&e.__esModule?function(){return e["default"]}:function(){return e};return l.d(t,"a",t),t},l.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},l.p="";var u=window["webpackJsonp"]=window["webpackJsonp"]||[],s=u.push.bind(u);u.push=t,u=u.slice();for(var i=0;i<u.length;i++)t(u[i]);var a=s;c.push([0,"chunk-vendors"]),n()})({0:function(e,t,n){e.exports=n("aef7")},aef7:function(e,t,n){"use strict";n.r(t);var o=n("7a23");const r=Object(o["e"])("h1",null,"所有 demo 以网络请求为例，请打开 Devtool -> Network 查看效果",-1);function c(e,t,n,c,l,u){const s=Object(o["k"])("DebounceAsync"),i=Object(o["k"])("ThrottleAsync"),a=Object(o["k"])("ConcurrentAsync"),b=Object(o["k"])("CancelizeAsync");return Object(o["g"])(),Object(o["d"])(o["a"],null,[r,Object(o["e"])(s),Object(o["e"])(i),Object(o["e"])(a),Object(o["e"])(b)],64)}const l=Object(o["e"])("legend",null,"debounceAsync",-1),u=Object(o["e"])("ul",null,[Object(o["e"])("li",null," 背景：网络不稳，响应时间严重不均匀，无法保证响应顺序和请求顺序一致 "),Object(o["e"])("li",null," 需求：无论网络请求的返回顺序如何，我们只想要最后一次“发起”的请求结果 "),Object(o["e"])("li",null," 注释：如果说debounce是发送前取最后一次输入，那么debounceAsync就是发送后取最后一次请求对应的输出 "),Object(o["e"])("li",null,"原文：https://github.com/bowencool/blog/issues/3")],-1),s={id:"suggestions"};function i(e,t,n,r,c,i){return Object(o["g"])(),Object(o["d"])("fieldset",null,[l,u,Object(o["e"])("input",{onInput:t[1]||(t[1]=(...t)=>e.onInput&&e.onInput(...t)),type:"text",placeholder:"type something quickly",list:"suggestions",style:{width:"300px"}},null,32),Object(o["e"])("datalist",s,[(Object(o["g"])(!0),Object(o["d"])(o["a"],null,Object(o["j"])(e.suggestions,e=>(Object(o["g"])(),Object(o["d"])("option",{key:e,value:e},null,8,["value"]))),128))])])}function a(e){let t=0;return function(...n){const o=++t;return e.call(this,...n).then((...e)=>o!==t?new Promise(()=>{}):Promise.resolve(...e))}}function b(e){let t=!1;return function(...n){return t?new Promise(()=>{}):(t=!0,e.call(this,...n).then((...e)=>(t=!1,Promise.resolve(...e))).catch((...e)=>(t=!1,Promise.reject(...e))))}}function f(e,t=3){let n;const o=[];let r=0;function c(){if(r>=t)return;const e=o.shift();e&&l(e)}function l([t,o,l]){r++,e.apply(n,t).then((...e)=>{o(...e),r--,c()}).catch((...e)=>{l(...e),r--,c()})}return function(...e){n=this;const t=new Promise((t,n)=>{o.push([e,t,n])});return c(),t}}class d extends Error{}class p extends Error{}function O(e,t={}){return function(...n){return new Promise((o,r)=>{let c;function l(){r(new d("aborted"))}function u(){r(new p(`timeout of ${t.timeout}ms`))}function s(){c&&clearTimeout(c),t.signal&&t.signal.removeEventListener("abort",l)}"number"===typeof t.timeout&&t.timeout>0&&(c=setTimeout(u,t.timeout)),t.signal&&t.signal.addEventListener("abort",l),e.call(this,...n).then((...e)=>{o(...e),s()}).catch((...e)=>{r(...e),s()})})}}function g(e){console.log("fetching",e);const t=(.4+2*Math.random()).toFixed(3);return fetch(`https://httpbin.org/delay/${t}?keywords=${e}`,{method:"GET",mode:"cors"}).then(()=>["suggestions1 for "+e,"suggestions2 for "+e,"suggestions3 for "+e])}const j=a(g);var h=Object(o["f"])({setup(){const e=Object(o["i"])([]);return{suggestions:e,async onInput(t){const n=t.target.value,o=await j(n);e.value=o}}}});h.render=i;var m=h;const y=Object(o["e"])("legend",null,"throttleAsync",-1),v=Object(o["e"])("ul",null,[Object(o["e"])("li",null," 背景：为防止用户重复提交，我们通常需要维护一个 loading 变量，当 loading 数量多起来就难搞了（我也想偷懒）。 "),Object(o["e"])("li",null,"需求：不需要写 loading，也可以去重"),Object(o["e"])("li",null,"原文：https://github.com/bowencool/blog/issues/3")],-1);function w(e,t,n,r,c,l){return Object(o["g"])(),Object(o["d"])("fieldset",null,[y,v,Object(o["e"])("button",{onClick:t[1]||(t[1]=(...t)=>e.onSubmit&&e.onSubmit(...t))},"submit(click me quickly)")])}function k(e){return console.log("submiting",e),fetch("https://httpbin.org/delay/1.5",{body:JSON.stringify(e),method:"POST",mode:"cors"})}const C=b(k);var P=Object(o["f"])({setup(){return{async onSubmit(){await C({msg:"some data to be sent"}),console.log("submit completed")}}}});P.render=w;var S=P;const x=Object(o["e"])("legend",null," concurrentAsync ",-1),A=Object(o["e"])("p",null,"一个限制最大并发的高阶函数",-1);function T(e,t,n,r,c,l){return Object(o["g"])(),Object(o["d"])("fieldset",null,[x,A,Object(o["e"])("button",{onClick:t[1]||(t[1]=(...t)=>e.onRequest&&e.onRequest(...t))},"无限制并发请求"),Object(o["e"])("button",{onClick:t[2]||(t[2]=(...t)=>e.onConcurrentRequest2&&e.onConcurrentRequest2(...t))},"限制最大2个并发请求"),Object(o["e"])("button",{onClick:t[3]||(t[3]=(...t)=>e.onConcurrentRequest3&&e.onConcurrentRequest3(...t))},"限制最大3个并发请求")])}function q(e){const t=(1+3*Math.random()).toFixed(3);return console.log("fetch start:",e),fetch(`https://httpbin.org/delay/${t}?i=${e}`,{method:"GET",mode:"cors"}).then(()=>e)}var R=Object(o["f"])({setup(){return{onRequest(){for(let e=0;e<7;e++)q(e).then(t=>console.log("rez:",e,t))},onConcurrentRequest2(){const e=f(q,2);for(let t=0;t<7;t++)e(t).then(e=>console.log("rez:",t,e))},onConcurrentRequest3(){const e=f(q,3);for(let t=0;t<7;t++)e(t).then(e=>console.log("rez:",t,e))}}}});R.render=T;var M=R;const E=Object(o["e"])("legend",null," cancelizeAsync ",-1),$=Object(o["e"])("p",null,"超时取消、手动取消",-1),z=Object(o["e"])("p",null,"fetch、xhr 原生就可以取消，所以这里就不用 HTTP 做示例了",-1);function _(e,t,n,r,c,l){return Object(o["g"])(),Object(o["d"])("fieldset",null,[E,$,z,Object(o["e"])("button",{onClick:t[1]||(t[1]=(...t)=>e.onStart&&e.onStart(...t))},"start"),Object(o["e"])("button",{onClick:t[2]||(t[2]=(...t)=>e.onStop&&e.onStop(...t))},"stop"),Object(o["e"])("pre",null,Object(o["l"])(e.text),1)])}function I(e=1e3){return new Promise(t=>{console.log(`The task will be completed in ${e}ms`),setTimeout(()=>t(`The result in ${e}ms`),e)})}var J=Object(o["f"])({setup(){let e;const t=Object(o["h"])({loading:!1,error:null,data:""});return{state:t,text:Object(o["b"])(()=>JSON.stringify(t,(e,t)=>t instanceof Error?t.message:t,2)),async onStart(){if(!t.loading){e=new AbortController;try{t.loading=!0,t.error=null,t.data=await O(I,{timeout:2e3,signal:e.signal})(1900+Math.floor(200*Math.random()))}catch(n){t.error=n,t.data=""}finally{t.loading=!1}}},onStop(){e.abort()}}}});J.render=_;var D=J,N=Object(o["f"])({name:"App",components:{DebounceAsync:m,ThrottleAsync:S,ConcurrentAsync:M,CancelizeAsync:D}});N.render=c;var F=N;Object(o["c"])(F).mount(document.body)}});
//# sourceMappingURL=index.8e6e389c.js.map