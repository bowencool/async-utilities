import{a}from"./index.232f95f1.js";import{d as u,r as l,c as n,F as s,a as r}from"./runtime-core.esm-bundler.6c7eec45.js";function i(t=1e3){return new Promise(e=>{console.log(`The task will be completed in ${t}ms`),setTimeout(()=>e(`The result in ${t}ms`),t)})}var f=u({setup(){let t;const e=l({loading:!1,error:null,data:""});return()=>n(s,null,[n("p",null,[r("fetch\u3001xhr \u539F\u751F\u5C31\u53EF\u4EE5\u53D6\u6D88\uFF0C\u6240\u4EE5\u8FD9\u91CC\u5C31\u4E0D\u7528 HTTP \u505A\u793A\u4F8B\u4E86")]),n("button",{onClick:async function(){e.loading||(t=new AbortController,e.loading=!0,e.error=null,e.data=await a(i,{timeout:1500,signal:t.signal,alwaysPendingWhenAborted:!0})(1400+Math.floor(Math.random()*200)),console.log("Task will never be completed once timeout or aborted"),e.loading=!1)},disabled:e.loading?!0:void 0},[e.loading?"loading...":"start"]),e.loading&&n("button",{onClick:()=>{t.abort()}},[r("stop")]),n("pre",null,[JSON.stringify(e,(d,o)=>o instanceof Error?o.message:o,2)])])}});export{f as default};
